<reference id="libggi-ref-targets"><title>Targets reference</title>
<refentry id="display-x">


<refmeta>
<refentrytitle><systemitem/display-x/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>


<refnamediv>
<refname><systemitem/display-x/</refname>
<refname><systemitem/display-xlib/</refname>
<refpurpose/Displays in an X window/
</refnamediv>

<refsynopsisdiv>

<cmdsynopsis>
<command/display-x/
<arg choice=plain/:/
<group>
 <arg><option/-inroot/</arg>
 <arg><option>-inwin=<replaceable/winid/</option></arg>
</group>
<arg><replaceable/display/</arg>
</cmdsynopsis>

<cmdsynopsis>
<command/display-xlib/
<arg choice=plain/:/
<group>
 <arg><option/-inroot/</arg>
 <arg><option>-inwin=<replaceable/winid/</option></arg>
</group>
<arg><replaceable/display/</arg>
</cmdsynopsis>

</refsynopsisdiv>

<refsect1>
<title/Description/

<para>
<systemitem/display-x/ opens an X window and emulates a linear
framebuffer which is blitted to the X server with the
<function/XPutImage/ function. In <link linkend="ggiSetFlags">
asynchronous mode</link> this is done when <function/ggiFlush/ is called, and
in synchronous mode it is done periodically in the background (with the
framerate specified by <link linkend="GGI-MANSYNC-FPS">
<envar/GGI_MANSYNC_FPS/</link>.  The MITSHM
extension is used when available for maximum speed.
</para>

<para>
<systemitem/display-xlib/ opens an window and uses Xlib primitives to do
drawing.  It is faster than <systemitem/display-x/ when using drawing
primitives on on accelerated X server, but blitting is slower when
running local to the X server.
</para>

<para>
In both targets, <keycombo><keycap/Ctrl/<keycap/Alt/<keycap/m/</keycombo>
toggles mouse grabbing.  It will try to emulate a "relative" mouse
device, i.e. one that can be moved arbitrarily far in any direction
without ever leaving the window.  This is useful for game controls,
where loosing focus is generally undesireable.  Note that grabbing must
be turned off in order to leave the window.
</para>

</refsect1>

<refsect1>
<title/Options/

<variableList>
 <varlistentry>
 <term><replaceable/display/</term>
 <listitem><para>
 The X display to connect to, otherwise defaults to the display
 specified in <envar/DISPLAY/
 </para></listitem>
 </varlistentry>
 
 <varlistentry>
 <term><option/-inroot/</term>
 <listitem><para>
 Run in root window
 </para></listitem>
 </varlistentry>
 <varlistentry>
 <term><option>-inwin=<replaceable/winid/</option></term>
 <listitem><para>
 Run in already-existing window with id <replaceable/winid/
 </para></listitem>
 </varlistentry>
</variableList>

</refsect1>

<refsect1>
<title>Features</title>

<refsect2>
<title>For <systemitem/display-x/</title>
<simplelist>
<member>DirectBuffer always available.</member>
<member>Unaccelerated</member>
<member>Multiple frames</member>
<member>Panning</member>
</simplelist>
</refsect2>

<refsect2>
<title>For <systemitem/display-xlib/</title>
<simplelist>
<member>DirectBuffer never available.</member>
<member>Accelerated if the hosting X server is.</member>
</simplelist>
</refsect2>

</refsect1>

</refentry>


<refentry id="display-dga">

<refmeta>
<refentrytitle><systemitem/display-dga/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-dga/</refname>
<refpurpose/Display using XFree86-DGA extension/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-dga/
<arg choice=plain/:/
<arg><replaceable/display/</arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1>
<title/Description/

<para>
Uses the XFree86 DGA extension to do fullscreen direct framebuffer
access on X servers which support this.  For systems without kernel
framebuffer support, the program must be run as <systemitem
class=systemname/root/ for this target
to be able to mmap <filename>/dev/mem</filename>.
</para>

</refsect1>

<refsect1>
<title/Options/
<para>
The X display to connect to can be optionally specified.
Otherwise the display in <envar/DISPLAY/ is used.
</para>

<para>
The environment variable <envar/GGI_DGA_FBDEV/ is used to specify a
framebuffer device to mmap instead of <filename>/dev/mem</filename>.
This allows you to use the <systemitem/DGA/ target without root
privileges!
</para>
  
</refsect1>

<refsect1>
<title/Features/

<simplelist>
<member>DirectBuffer always available.</member>
<member>Some operations may be accelerated depending on the X server</member>
<member>Multiple frames</member>
<member>Panning</member>
</simplelist>

</refsect1>

</refentry>




<refentry id="display-aa">

<refmeta>
<refentrytitle><systemitem/display-aa/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-aa/</refname>
<refpurpose/Display using AAlib/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-aalib/
</cmdsynopsis>
</refsynopsisdiv>

<refsect1>
<title/Description/

<para>Uses the <ulink url="http://horac.ta.jcu.cz/aa/aalib/">AA-lib</ulink>, 
an ASCII art library, for output and input.</para>
  
</refsect1>

<refsect1>
<title/Environment variables/
<para>
AA-lib options may be specified using the the <envar/AA_OPTS/ variable.
</para>
</refsect1>

<refsect1>
<title/Features/

<simplelist>
<member>DirectBuffer always available</member>
<member>Unaccelerated</member>
<member>Currently, only supports 8-bit palettized modes</member>
</simplelist>

</refsect1>

</refentry>




<refentry id="display-fbdev">

<refmeta>
<refentrytitle><systemitem/display-fbdev/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-fbdev/</refname>
<refpurpose/Display using Linux kernel framebuffer devices/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-fbdev/
<arg choice=plain/:/
<group>
 <arg><option>-noinput</option></arg>
 <group choice=opt>
  <arg><option>-nokbd</option></arg>
  <arg><option>-nomouse</option></arg>
 </group>
</group>
<arg><option>-novt</option></arg>
<arg><replaceable/framebuffer/</arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1>
<title/Description/

<para>
Uses the Linux <filename>/dev/fb*</filename> devices to do fullscreen
graphics.
</para>

<para>
When using a regular fbdev driver, <filename>/etc/fb.modes</filename> 
is used to determine the available modes for the device.
Driver timings and resolutions can be automatically obtained when
running under KGIcon.
</para>

</refsect1>

<refsect1>
<title/Options/

<variablelist>

<varlistentry>
<term><replaceable/framebuffer/</term>
<listitem><para>
The filename of the framebuffer target to use.  The default is to get it
from the <envar/FRAMEBUFFER/ environment, or the framebuffer associated
with the current console if that is unset.
</para></listitem>
</varlistentry>

<varlistentry>
<term><option/-nokbd/</term>
<listitem><para>
Do not open any libraries for keyboard input.
</para></listitem>
</varlistentry>

<varlistentry>
<term><option/-nomouse/</term>
<listitem><para>
Do not open any libraries for mouse input.
</para></listitem>
</varlistentry>

<varlistentry>
<term><option/-noinput/</term>
<listitem><para>
Same as both <option/-nokbd/ and <option/-nomouse/.
</para></listitem>
</varlistentry>

<varlistentry>
<term><option/-novt/</term>
<listitem><para>
Disable virtual console support.
</para></listitem>
</varlistentry>

</variablelist>

</refsect1>

<refsect1>
<title/Features/

<simplelist>
<member>DirectBuffer always available.</member>
<member>Accelerated when using KGIcon or matroxfb.</member>
<member>Multiple frames</member>
<member>Panning</member>
</simplelist>

</refsect1>

<refsect1>
<title/See Also/

<simplelist>
<member>
<citerefentry><refentrytitle><filename/fb.modes/</refentrytitle><manvolnum/5/</citerefentry>
</member>
</simplelist>

</refsect1>

</refentry>



<refentry id="display-file">

<refmeta>
<refentrytitle><systemitem/display-file/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-file/</refname>
<refpurpose/Render display into image file/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-file/
<arg choice=plain/:/
<arg><option>-flushcmd="<replaceable/command to execute/"</option></arg>
<arg><option>-flushframe=<replaceable/n/</option></arg>
<arg><option>-flushtime=<replaceable/t/</option></arg>
<arg choice=req><replaceable/filename/</arg>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1>
<title/Description/

<para>
Renders an image into a file.  The file can be a framebuffer device
(e.g. <filename>/dev/fb0</filename>), in which case a reasonable
representation of the image will be drawn on the console <emphasis/so
long as/ the program's mode matches the framebuffer's mode.
</para>

<note><para>
This target generates no input.  The <systemitem/multi/ target can be
used in order to see (and control) what the program does (using a normal
target) and then generate a snapshot when the program exits.
</para></note>

</refsect1>

<refsect1>
<title/Options/

<para>
<replaceable/filename/ is the file to render the images to.  If the
filename is a PPM file (has the extension <filename/.ppm/), then the
image will be generated at <function/ggiClose/ time.  Otherwise the file
is a custom `GGIFILE' format and is generated continuously.
</para>

<para>
The <systemitem class=resource/file/ target can be used to generate
movies from running LibGGI applications. To do this, set
<option/-flushcmd/ to a shell command to execute at the times given by
one of the two other parameters. This looks typically like
<literal/ppmtogif foo.ppm >foo.%04d.gif/. The command is passed through a
<citerefentry><refentrytitle><function/printf/</refentrytitle><manvolnum/3/</citerefentry>
which has the current count of saved frames as an argument (or rather as
10 arguments to allow a few more complex commands).
</para>

<para>
This shell command is either executed at every <replaceable/n/-th
invocation of ggiFlush or every <replaceable/t/ seconds, where
<replaceable/t/ can have fractional components (specified as decimal).
</para>

<para>
Note, that the invocation of the shell command will slow down the
program, so make sure you use a reasonable value, if you use the
<option/-flushtime/ argument.
</para>

<para>
The primary file is updated before every invocation of the shell
command.
</para>

</refsect1>

<refsect1>
<title/Features/

<simplelist>
<member>DirectBuffer always available.</member>
<member>Unaccelerated.</member>
</simplelist>
</refsect1>

</refentry>


<refentry id="display-directx">

<refmeta>
<refentrytitle><systemitem/display-directx/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-directx/</refname>
<refpurpose/DirectX (WIN32)/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-directx/
<arg choice=plain/:/
</cmdsynopsis>

<cmdsynopsis>
<command/display-directxnt/
<arg choice=plain/:/
</cmdsynopsis>

</refsynopsisdiv>

<refsect1>
<title/Description/

<para>
Used for Win32 DirectX port of libGGI.
</para>

<para>
Use <command/display-directxnt/ on NT4 system.
</para>

</refsect1>

</refentry>


<refentry id="display-glide">

<refmeta>
<refentrytitle><systemitem/display-glide/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-glide/</refname>
<refpurpose/Display using Glide library/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-glide/
<arg choice=plain/:/
<arg><replaceable/card/</arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1>
<title/Description/

<para>
Uses the Glide library to display fullscreen on a 3DFX graphics card.
</para>

</refsect1>

<refsect1>
<title/Options/

<para>
The 3DFX card to use can be optionally specified as a cardinal number
minus one.  (e.g. <literal/0/ means the first card, <literal/1/ the
second, etc.)
</para>

</refsect1>

<refsect1>
<title/Environment variables/

<variableList>

<varlistentry>
<term><envar/GGI_GLIDE_MAXFREQ/</term>
<listitem><para>
specifies the maximum update frequency your monitor can handle (in Hz). Default is 70Hz.
</para></listitem>
</varlistentry>

<varlistentry>
<term><envar/GGI_GLIDE_MAXHFREQ/</term>
<listitem><para>
specifies the maximum horizontal frequency your monitor can handle (in kHz). Default is 48kHz.
</para></listitem>
</varlistentry>

<varlistentry>
<term><envar/GGI_GLIDE_HALTONSWITCH/</term>
<listitem><para>if this is set applications will be halted on
console switchaway. The default is to continue running.
</para></listitem>
</varlistentry>

</variableList>

</refsect1>

<refsect1>
<title/Features/

<simplelist>
<member>DirectBuffer never available.</member>
<member>Accelerated, one of the fastest targets when it comes to
drawing-primitives.</member>
<member>Multiple frames.</member>
</simplelist>

</refsect1>

</refentry>



<refentry id="display-memory">

<refmeta>
<refentrytitle><systemitem/display-memory/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-memory/</refname>
<refpurpose/Display on buffer in main memory/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-memory/
<arg choice=plain/:/
<arg><option>-input</option></arg>
<group>
 <arg>shmid:<replaceable/sid/</arg>
 <arg>keyfile:<replaceable/size/:<replaceable/id/:<replaceable/fname/</arg>
 <arg>pointer</arg>
</group>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1>
<title/Description/

<para>
Emulates a linear framebuffer in main memory. The framebuffer can be a
shared memory segment, an area specified by the application, or an area
allocated by <systemitem/display-memory/ itself.
</para>

</refsect1>

<refsect1>
<title/Options/

<variableList>

<varlistentry>
<term><replaceable/-input/</term>
<listitem>

<para>
If the <option/-input/ option is set, an input buffer of <symbol/INPBUFSIZE/
(default is 8192 bytes) as #define'd in <filename>ggi/display/memory.h</filename>
is allocated at the start of the requested memory area.
</para>

<para>
When running on shared memory, this option enables you to to give input
(using <link linkend="ggiEventPoll"><function/giiSendEvent/</link>) 
to other processes sharing that segment.  This
technique is demonstrated in <application/cube3d/ and can be used for
things like GGI multiplexers.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>shmid:<replaceable/sid/</term>
<listitem>
<para>use existing shared memory ID <replaceable/sid/</para>
</listitem>
</varlistentry>

<varlistentry>
<term>keyfile:<replaceable/size/:<replaceable/id/:<replaceable/fname/</term>
<listitem>
<para>create a new shm segment with id ftok(<replaceable/fname/, <replaceable/id/)
of size <replaceable/size/ (preferred method !)</para>
</listitem>
</varlistentry>

<varlistentry>
<term>pointer</term>
<listitem>
<para>use the memory pointed to by <parameter/argptr/ 
(only available to applications calling <Function/ggiOpen/).
</para></listitem>
</varlistentry>

</variablelist>
  
<important><para>
If you specify a memory area to use - be sure it's big enough as no
checks can or will be made that a certain mode fits into it.
</para></Important>

</refsect1>

<refsect1>
<title/Features/

<simplelist>
<member>DirectBuffer support always available.</member>
<member>Unaccelerated.</member>
</simplelist>

</refsect1>

</refentry>



<refentry id="display-svgalib">

<refmeta>
<refentrytitle><systemitem/display-svgalib/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-svgalib/</refname>
<refpurpose/Display fullscreen using SVGAlib/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-svgalib/
</cmdsynopsis>
</refsynopsisdiv>


<refsect1>
<title/Description/

<para>Uses the SVGAlib library to display fullscreen on a
VGA-compatible graphics card.</para>

<para>You may need to be root in order to have IO permissions to drive
the VGA device.</para>

</refsect1>

<refsect1>
<title/Features/

<simplelist>
<member>DirectBuffer is available for the 320x200x8 mode.
For other modes, support is only available if SVGAlib supports linear
addressing.</member>
<member>Unaccelerated</member>
</simplelist>

</refsect1>

</refentry>



<refentry id="display-vcsa">

<refmeta>
<refentrytitle><systemitem/display-vcsa/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-vcsa/</refname>
<refpurpose/Display using Linux virtual console text device/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-vcsa/
<arg choice=plain/:/
<arg><option>-shade</option></arg>
<arg><option>-ascii</option></arg>
<arg><replaceable/vcsa device/</arg>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1>
<title/Description/

<para>
Uses the Linux <filename>/dev/vcsa*</filename> devices 
to render text modes onto the console.
</para>
  
</refsect1>

<refsect1>
<title/Options/

<variableList>

<varlistentry>
<term><replaceable/vcsa device/</term>
<listitem><para>
The filename of the device file, defaulting to
<filename>/dev/vcsa</filename> which draws on the current virtual
console.
</para></listitem>
</varlistentry>

<varlistentry>
<term><option>-shade</option></term>
<listitem><para>
The <option/-shade/ option turns on `shading mode', which changes the
color mapping so that it chooses characters which emulate a shading
effect.  This makes a big improvement if using (some might say abusing
:) the <systemitem/vcsa/ target for graphical purposes.
</para></listitem>
</varlistentry>

<varlistentry>
<term><option>-ascii</option></term>

<listitem><para>
The <option/-ascii/ option limits the color mapping to only using ASCII
characters.  The default mode uses IBM special characters (the solid
block mainly, and others when using <option/-shade/).
</para></listitem>
</varlistentry>

</variablelist>

</refsect1>
  
<refsect1>
<title/Features/

<simplelist>
<member>No DirectBuffer support.</member>
<member>Unaccelerated.</member>
</simplelist>

</refsect1>

</refentry>



<refentry id="display-monotext">

<refmeta>
<refentrytitle><systemitem/display-monotext/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-monotext/</refname>
<refpurpose/Emulate palettized modes on text-mode visuals/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-monotext/
<arg choice=plain/:/
<group>
 <arg><option>-a=<replaceable/accuracy/</option></arg>
 <group choice=opt>
  <arg><option>-x=<replaceable/accuracy/</option></arg>
  <arg><option>-y=<replaceable/accuracy/</option></arg>
 </group>
</group>
<arg><replaceable><link linkend="target-spec"/target-spec/</></arg>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1>
<title/Description/

<para>
Emulates palettized modes (GT_PALETTE) on another target which can only
do text modes, by representing the graphics as ASCII characters.  The
effect is the much the same as the <systemitem/AAlib/ target, but does
not depend on any external libraries.
</para>

</refsect1>

<refsect1>
<title/Options/

<variablelist>
<varlistentry>
<term><option>-x=<replaceable/accuracy/</option></term>
<term><option>-y=<replaceable/accuracy/</option></term>
<listitem><para>
A value between 1 and 5 which determines how accurately to map the
graphics to ASCII characters.  Lower values are less accurate, but can
represent a wider range of intensity levels.
</para>
    
<para>The default is X=2 and Y=4.</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option>-a=<replaceable/accuracy/</option></term>
<listitem><para>
Same as above, but sets both the X and Y accuracy to the specified
value.
</para></listitem>
</varlistentry>

</variablelist>
  
</refsect1>

</refentry>



<refentry id="display-multi">

<refmeta>
<refentrytitle><systemitem/display-multi/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-multi/</refname>
<refpurpose/Duplicate visual operations onto multiple visuals/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-multi/
<arg choice=plain/:/
<arg choice=req rep=repeat><replaceable><link linkend="target-spec"/target-spec/:</></arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1>
<title/Description/

<para>
Duplicates all drawing operations onto multiple `child' targets, thus
producing identical output on multiple visuals.
</para>

</refsect1>

<refsect1>
<title/Options/

<para>
The argument to <systemitem/display-multi/ is a colon- (`:') separated
list of target specs to draw on.  Because target specs can (and often
do) contain colons, they need to be enclosed in parentheses.
</para>
  
</refsect1>

<refsect1>
<title/Features/

<simplelist>
<member>DirectBuffer never supported.</member>
<member>Unaccelerated.</member>
</simplelist>

</refsect1>

</refentry>

<refentry id="display-palemu">

<refmeta>
<refentrytitle><systemitem/display-palemu/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-palemu/</refname>
<refpurpose/Emulate palettized modes on visuals of other mode schemes/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-palemu/
<arg choice=plain/:/
<arg><option>-parent=<replaceable/mode/</option></arg>
<arg choice=req><replaceable/target-spec/</arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1>
<title/Description/

<para>
Emulates palettized modes (<symbol/GT_PALETTE/) on another target which
can only do truecolor/greyscale/text modes or palettized modes of higher
depth.
</para>

</refsect1>

<refsect1>
<title/Options/

<variablelist>

<varlistentry>
<term><option>-parent=<replaceable/mode/</option></term>
<listitem><para>
Force the parent target to use a specific mode, specified as a standard 
<link linkend="ggi-mode-string"/LibGGI mode string/.
</para></listitem>
</varlistentry>

<varlistentry>
<term><replaceable/target-spec/</term>
<listitem><para>
Specifies the target which to draw on (the `parent' target).  This
defaults to automatic selection (just like using
<function/ggiOpen/(<symbol/NULL/) when <envar/GGI_DISPLAY/ is not set).
</para></listitem>
</varlistentry>

</variablelist>

</refsect1>

<refsect1>
<title/Features/

<simplelist>
<member>DirectBuffer never supported.</member>
<member>Unaccelerated.</member>
</simplelist>
</refsect1>

 
</refentry>
 
<refentry id="display-tile">

<refmeta>
<refentrytitle><systemitem/display-tile/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-tile/</refname>
<refpurpose>Divide display into tiles similar to a video wall</refpurpose>
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-tile/
<arg choice=plain/:/

<group>
 <arg><option/-usedb/</arg>
 <arg><option/-nodb/</arg>
</group>

<arg rep=repeat choice=req>
 <replaceable/offset-x/,
 <replaceable/offset-y/,
 <replaceable/size-x/,
 <replaceable/size-y/,
 <replaceable/child-target-spec/:
</arg>

</cmdsynopsis>
</refsynopsisdiv>


<refsect1>
<title/Description/

<para>
Emulates one big target, where one or more areas are mapped to different
child visuals.   
</para>

</refsect1>

<refsect1>
<title/Options/

<para>
For each tile (i.e. child visual or mapped area), the following must be 
specified:

<variablelist>

<varlistentry>
<term><replaceable/offset-x/</term>
<term><replaceable/offset-y/</term>
<listitem><para>
coordinates (within the parent visual) of the top-left corner of the child visual
</para></listitem>
</varlistentry>

<varlistentry>
<term><replaceable/size-x/</term>
<term><replaceable/size-y/</term>
<listitem><para>
width and height of the child visual
</para></listitem>
</varlistentry>

<varlistentry>
<term><replaceable/child-target-spec/</term>
<listitem><para>
a target spec.  Since target specs can (and often do) contain colons, it
needs to be enclosed in parentheses.
</para></listitem>
</varlistentry>

</variablelist>
</para>
  
<para>
The following options apply to the whole <systemitem/display-tile/:

<variablelist>

<varlistentry>
<term><option/-usedb/</term>
<listitem>

<para>
Enables DirectBuffer emulation. This is the default mode.  
</para>

<para>
The contents of each mapped area is blitted from the DirectBuffer into
their respective child visuals at regular intervals or when the visual
is flushed.  DirectBuffer emulation works regardless of whether the
child visuals support DirectBuffer or not.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><option/-nodb/</term>

<listitem><para>
Disables DirectBuffer emulation.  LibGGI primitives are passed to each
of the child visuals with the necessary clipping and translation.  Thus,
if a child visual underlying a mapped area supports acceleration, then
the operation on that area will be accelerated.
</para></listitem>
</varlistentry>

</variablelist></para>

</refsect1>

<refsect1>
<title/Features/

<simplelist>
<member>DirectBuffer support depends on the <option/-usedb//<option/-nodb/
options.</member>
<member>Accelerated in no-DB mode if the underlying target is,
otherwise unaccelerated.</member>
</simplelist>

<tip><para>
<systemitem/display-tile/ can be used to emulate DirectBuffer for
obstinate applications that cannot run without it, by specifying one
tile which maps the whole screen.
</para></tip>

</refsect1>
</refentry>



<refentry id="display-trueemu">

<refmeta>
<refentrytitle><systemitem/display-trueemu/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-trueemu/</refname>
<refpurpose/Emulate truecolor modes/
</refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command/display-trueemu/
<arg choice=plain/:/

<arg><option>-parent=<replaceable/mode/</option></arg>
<arg><option>-dither=<replaceable/dither/</option></arg>
<arg><option>-model=<replaceable/model/</option></arg>
<arg choice=req><replaceable/target-spec/</arg>

</cmdsynopsis>
</refsynopsisdiv>


<refsect1>
<title/Description/

<para>
Emulates truecolor modes (<symbol/GT_TRUECOLOR/) on another target which
can only do palette modes or truecolor modes of different sizes/depths.
Uses dithering and special palettes to get the highest possible quality.
</para>

</refsect1>

<refsect1>
<title/Options/

<variablelist>

<varlistentry>
<term><option>-parent=<replaceable/mode/</option></term>
<listitem><para>
Force the parent target to use a specific mode, specified as a standard 
<link linkend="ggi-mode-string"/LibGGI mode string/.
</para></listitem>
</varlistentry>

<varlistentry>
<term><option>-dither=<replaceable/dither/</option></term>
<listitem><para>
Specifies the amount of dithering.  Legal values are 0, 2 and 4,
defaulting to 4.
</para>

<para>When the target is running,
<keycombo><keycap/Ctrl/<keycap/Alt/<keycap/d/</keycombo> changes the
dithering level.</para></listitem>
    
</varlistentry>
  
<varlistentry>
<term><option>-model=<replaceable/model/</option></term>
<listitem>

<para>Color model to use (only when the parent is palettized).  Legal
values are rgb, cube and pastel.  Default depends on the parent
mode.</para>

<para>When the target is running,
<keycombo><keycap/Ctrl/<keycap/Alt/<keycap/p/</keycombo> changes the
current color model.</para>

</listitem>
</varlistentry>

<varlistentry>
<term><replaceable/target-spec/</term>
<listitem><para>Specifies the target which to draw on (the `parent'
target).  This defaults to automatic selection (just like using
<Function/ggiOpen/(<symbol/NULL/) when <envar/GGI_DISPLAY/ is not
set).</para></listitem>
</varlistentry>
</variablelist>


</refsect1>

<refsect1>
<title/Features/
  
<simplelist>
<member>DirectBuffer never supported.</member>
<member>Unaccelerated.</member>
</simplelist>

</refsect1>

</refentry>

<refentry id="display-sub">

<refmeta>
<refentrytitle><systemitem/display-sub/</refentrytitle>
<manvolnum/7ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname><systemitem/display-sub/</refname>
<refpurpose/Make a child visual that is a window to the parent/
</refnamediv>

<refsect1>
<title/Description/

<para>Creates a `child' visual within a "parent". This can be thought of
as a window and the <systemitem class=resource/sub/ target is intended
for simple windowing systems.  </para>

<para>
No textual arguments.  <parameter/argptr/ must contain the parent
visual.
</para>

<para>
The sub target behaves a bit special with respect to (i.e. abuses the
semantics of :) the <link linkend="ggiSetMode"><function/ggiSetMode/
</link> call.  It uses the "visible" size for the top left corner
position of the window within the visual, and the "virtual" size for
window width and height.  Note, that moving/resizing the window does
<emphasis/not/ cause any drawing action.  You have to perform those
yourself. All it does for you is providing a virtual visual within an
existing one, which is convenient to allow for window system canvases to
be about any GGI program.
</para>

</refsect1>

<refsect1>
<title/Features/

<simplelist>
<member>DirectBuffer not supported.</member>

<member>Accelerated to the point of the parent. Calls are mapped
through with modified clipping and coordinates.</member>
</simplelist>
</refsect1>


</refentry>
</reference>
