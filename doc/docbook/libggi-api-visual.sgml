<refentry id="api-ggiopen">

<refmeta>
<refentrytitle><function/ggiOpen/</refentrytitle>
<manvolnum/3ggi/
<refmiscinfo/GGI/
</refmeta>

<refnamediv>
<refname/ggiOpen/
<refname/ggiClose/
<refpurpose/Open and close a visual/
</refnamediv>

<refsynopsisdiv><funcsynopsis>
<funcsynopsisinfo>#include &lt;ggi/ggi.h&gt;</funcsynopsisinfo>

<funcprototype>
<funcdef>
ggi_visual_t <function/ggiOpen/</funcdef>
<paramdef>
const char *<parameter/display/, 
<replaceable/.../
</paramdef>
</funcprototype>

<funcprototype>
<funcdef>int <function/ggiClose/</funcdef>
<paramdef>
ggi_visual_t <parameter/vis/
</paramdef>
</funcprototype>

</funcsynopsis></refsynopsisdiv>


<refsect1>
<title/Description/

<para>
<function/ggiOpen/ opens a visual.  The visual is specified as a display
string, followed by <symbol/NULL/.  If only <symbol/NULL/ is specified,
the default display target is opened.  (This may be may be specified by
the user.)
</para>

<para>
The other arguments are for internal purposes only, such as
<parameter/argptr/, used to pass driver-specific, non-textual
information to the driver.
</para>

<para>
<function/ggiClose/ releases and destroys an open visual.
This will close X windows, return consoles to text-mode, etc.
</para>

</refsect1>

<refsect1>

<title/Return value/

<para>
<function/ggiOpen/ returns the opened visual (<type/ggi_visual_t/), or
<returnvalue/NULL/ for error.
</para>

<para>
<function/ggiClose/ returns <returnvalue/0/ for OK, otherwise an error
code.
</para>

</refsect1>

<refsect1>
<title/Examples/

<example>
<title/Open and closing default visual/
<programlisting format="linespecific">
ggi_visual_t vis = ggiOpen(NULL);

if(vis==NULL)
{
        ggiPanic("Couldn't open default visual!\n");
}

<replaceable>/* do stuff */</replaceable>

ggiClose(vis);

</programlisting>
</example>

<example>
<title/Open and closing a memory visual/

<programlisting format="linespecific">

ggi_visual_t memvis = ggiOpen("display-memory", NULL);

if(memvis==NULL) {
        return -1;
}

<replaceable>/* do stuff */</replaceable>

ggiClose(memvis);

</programlisting>
</example>

</refsect1>


<refsect1>
<title/See Also/

<simplelist>
<member><xref linkend="api-ggiinit"></member>

<!-- !!! link to libggi(7) -->

</simplelist>

</refsect1>

</refentry>
