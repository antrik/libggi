<chapter id="libggi-env">
<title/Environment variables/

<para>
The following outlines the environment variables, intended for the user,
which affect the behaviour of LibGGI:

<variablelist>


<varlistentry>
<term><envar/DISPLAY/</term>

<listitem>
<para>
If set, LibGGI assumes that you want to use the <systemitem/X/
target.  This setting is overriden by the <envar/GGI_DISPLAY/ variable.
</para>
</listitem>
</varlistentry>



<varlistentry>
<term><envar/GGI_DISPLAY/</term>

<listitem>
<para>
Specifies the default target used when the application calls 
<link linkend="ggiOpen"><function/ggiOpen/</link>
with <symbol/NULL/ argument.
</para>
  
<para>
The default target is specified using a target-spec:

<cmdsynopsis id="target-spec">
<command><replaceable/targetname/</command>
<arg choice=opt>:<replaceable/targetargs/</arg>
</cmdsynopsis>

where <replaceable/targetname/ is the <link linkend="targets"/name of the target/,
and <replaceable/targetargs/ are any target-specific arguments.
</para>

<para>
If neither this variable nor <envar/DISPLAY/ is set, then the following
targets are tried in order until one works:

<simplelist TYPE=inline>
<member><systemitem/fbdev/</member>
<member><systemitem/svga/</member>
<member><systemitem/aa/</member>
</simplelist>
</para>

<example>
<title>Example <envar/GGI_DISPLAY/ settings</title>

<screen>
<prompt/$ /<userinput><envar/GGI_DISPLAY/=aa ./flying_ggis</><lineannotation/  # see ASCII art flying GGIs/
<prompt/$ /<userinput><envar/GGI_DISPLAY/=multi:(Xlib:crono:0.0):(X::0.0) ./demo</><LineAnnotation/  # see demo on both machine next door and local X at the same time/
</screen>

</example>
</listitem>
</varlistentry>



<varlistentry id="GGI-INPUT">
<term><envar>GGI_INPUT_<replaceable/target/_<replaceable/n/</envar></term>
<term><envar>GGI_INPUT_<replaceable/target/</envar></term>
<term><envar>GGI_INPUT</envar></term>

<listitem>
<para>
<envar>GGI_INPUT_<replaceable/target/</envar> specifies extra <link
linkend="inputs">LibGII input sources</link> and/or filters for visuals 
using <replaceable/target/.
</para>

<para>
Multiple inputs can be specified by enclosing each input-spec in parentheses 
and separating them with semicolons:

<cmdsynopsis>
<arg rep=repeat choice=req>(<replaceable/i1/):</arg>
</cmdsynopsis>

</para>

<para>
The inputs specified by 
<envar>GGI_INPUT_<replaceable/target/_<replaceable/n/</envar> are only
opened at the <replaceable/n/th call of <link linkend="ggiOpen">
<function/ggiOpen/</link>.
This is used for misbehaving applications that do not allow the user to
specify inputs for the different targets that it opens.
</para>

<para>
The <envar>GGI_INPUT</envar> variable specifies input settings for all
other targets not specified using the other two variable forms.
</para>

<example>
<title>Example <envar/GGI_INPUT/ strings</title>

<screen>
<prompt/$ /<userinput>export <envar/GGI_INPUT/=linux-mouse:auto</><lineannotation/  # all targets/
<prompt/$ /<Userinput>export <envar/GGI_INPUT_multi/=linux-mouse:auto</><LineAnnotation/  # for multi target only/
</screen>
</example>

</listitem>
</varlistentry>
  

 

<varlistentry id="GGI-DEFMODE">
<term><envar>GGI_DEFMODE</envar></term>

<listitem>
<para>
Specifies the default mode, which is used for mode negotiation with
LibGGI applications.  Specifically, when <link linkend="ggi-auto">
<symbol/GGI_AUTO/</link> or <symbol/GT_AUTO/ are specified in a 
mode setting call they will be replaced with values from 
<envar/GGI_DEFMODE/ before calling the target's own
<function/ggiSetMode/ implementation.
</para>
  
<para id="ggi-mode-string">
The format is: (all on one line)

<synopsis format=linespecific>
<token>S</> <token><replaceable/x/</> x <token><replaceable/y/</> x <token><replaceable/depth/</>
<token>V</> <token><replaceable/x/</> x <token><replaceable/y/</>
<token>D</> <token><replaceable/x/</> x <token><replaceable/y/</>
<token>F</> <token><replaceable/frames/</>
<token>[</> <token><replaceable/scheme/</> <token><replaceable/depth/</> / <token><replaceable/size/</> <token>]</>
</synopsis>

Anything and everything can be omitted, except tokens indicating what
the next token is.
</para>

<para>
Any omitted values default to <symbol/GGI_AUTO/ (or <symbol/GT_AUTO/ for
the graphtype).  Whitespace and '.' symbols are ignored.  Character
tokens are case-insensitive.  If certain values are not possible, they
are overridden by the target.
</para>

  
  <variablelist>

  <varlistentry>
    <term><token/S/</term>
    <listitem><para>
    Denotes the <link linkend="ggi-mode-visible">visible</link> size of
    the visual.  Totally optional, as dimensions without a specifier are
    considered to be the visible dimensions.
    </para></listitem>
  </varlistentry>
  
  <varlistentry>
    <term><token><replaceable/x/</token></term>
    <term><token><replaceable/y/</token></term>
    <listitem><para>
    The width (<replaceable/x/) and height (<replaceable/y/), in pixels.
    </para></listitem>
  </varlistentry>
    
  <varlistentry>
    <term><token/V/</term>
    <listitem><para>
    Denotes <link linkend="ggi-mode-virtual">virtual</link> size, the
    total drawing area available to the application.  The virtual size
    must be equal or greater than the visible size.
    </para></listitem>
  </varlistentry>
    
  <varlistentry>
    <term><token/D/</term>
    <listitem><para>
    Denotes the <link linkend="ggi-mode-dpp">number of dots per
    pixel</link>.  For graphics modes, this is always 1x1, and for text
    modes, this is the size of the character cell.
    </para></listitem>
  </varlistentry>
    
  <varlistentry>
  <term><token/F/</term>
    <listitem><para>
    Denotes <link linkend="ggi-mode-frames">number of frames</link>
    available to the application. Applications can switch between
    different frames for double-buffering, etc.
    </para></listitem>
  </varlistentry>
    
  <varlistentry>
  <term><token/[/</term>
  <term><token/]/</term>
    <listitem><para>
    Delimits the <link linkend="ggi-graphtype">graphic type</link>.
    </para></listitem>
  </varlistentry>
    
  <varlistentry>
  <term><token><replaceable/scheme/</token></term>
    <listitem>
    <para>One of:
    <variablelist>
    <varlistentry><term><token/C/</><listitem><para><symbol/GT_TRUECOLOR/</></></>
    <varlistentry><term><token/P/</><listitem><para><symbol/GT_PALETTE/</></></>
    <varlistentry><term><token/K/</><listitem><para><symbol/GT_GREYSCALE/</></></>
    <varlistentry><term><token/T/</><listitem><para><symbol/GT_TEXT/</></></>
    </variablelist>
    </para>
    </listitem>
  </varlistentry>
    
  <varlistentry>
  <term><token><replaceable/depth/</token></term>
    <listitem><para>
    Pixel depth in number of bits.
    </para></listitem>
  </varlistentry>
    
  <varlistentry>
  <term><token><replaceable/size/</token></term>
    <listitem><para>
    Size of pixel in number of bits, including padding.
    </para></listitem>
  </varlistentry>
    
  </variablelist>
    
  <para>
  Instead of <replaceable/scheme/, <replaceable/depth/, <replaceable/size/, it
  is also possible to specify the graphtype by using one of the following:
  <simplelist TYPE=inline>
  <member><symbol/GT_1BIT/</member>
  <member><symbol/GT_2BIT/</member>
  <member><symbol/GT_4BIT/</member>
  <member><symbol/GT_8BIT/</member>
  <member><symbol/GT_15BIT/</member>
  <member><symbol/GT_16BIT/</member>
  <member><symbol/GT_24BIT/</member>
  <member><symbol/GT_32BIT/</member>
  <member><symbol/GT_TEXT16/</member>
  <member><symbol/GT_TEXT32/</member>
  </simplelist>
  </para>
    
  <Example>
  <Title>Examples of <envar/GGI_DEFMODE/ strings</Title>
  <variablelist>
    
  <varlistentry>
  <term><literal/640x480/</term>
    <listitem><para/just the visible size/</listitem>
  </varlistentry>
  <varlistentry>
  <term><literal/640x480#640x960/</term>
    <listitem><para/same size, but double-height virtual screen/</listitem>
  </varlistentry>
  <varlistentry>
  <term><literal/#1024x768/</term>
    <listitem><para/only virtual size defined/</listitem>
  </varlistentry>
    
  <varlistentry>
  <term><literal/80x40[T]/</term>
    <listitem><para/(default-fontsized) text mode with 80x40 characters/</listitem>
  </varlistentry>
  <varlistentry>
  <term><literal/#x100[T]/</term>
    <listitem><para/text mode with 100 virtual lines/</listitem>
  </varlistentry>
    
  <varlistentry>
  <term><literal/640x400[8]/</term>
    <listitem><para/640x400 at 8 bits per pixel/</listitem>
  </varlistentry>
  <varlistentry>
  <term><literal/640x480[GT_8BIT]/</term>
    <listitem><para/same as above, but palettized/</listitem>
  </varlistentry>
    
  <varlistentry>
  <term><literal/320x200x15/</term>
  <term><literal/320x200[C15]/</term>
    <listitem><para/320x200 with 32768 colors (hicolor)/</listitem>
  </varlistentry>
    
  <varlistentry>
  <term><literal/320x200[C/16]/</term>
    <listitem><para/320x200 with 16-bit pixels (also hicolor)/</listitem>
  </varlistentry>
    
  <varlistentry>
  <term><literal/320x200[C24/32]/</term>
  <term><literal/320x200[GT_32BIT]/</term>
    <listitem><para/320x200, with 32-bit pixels for 16777216 colors (truecolor)/</listitem>
  </varlistentry>
  
  <varlistentry>
  <term><literal/640x480F2[GT_16BIT]/</term>
    <listitem><para/16-bit-color 640x480 with two buffers/</listitem>
  </varlistentry>
    
  </variablelist>
  </example>
  </listitem>
    
</varlistentry>
    
<varlistentry>
<term><envar>GGI_DEBUG</envar></term>
<listitem>
  
<para>
The debugging level for LibGGI:
  
  <variablelist>
  <varlistentry>
    <term/0 or unset/
    <listitem><para/debug output is off; debugging is off/</listitem>
  </varlistentry>
  
  <varlistentry>
    <term/255/
    <listitem><para/all debug output is on/</listitem>
  </varlistentry>
  </variablelist>

</para>
  
<para>
You may also bitwise-or any of the following together:

  <variablelist>
  <varlistentry><term/2/<listitem><para/debug core/</listitem></varlistentry>
  <varlistentry><term/4/<listitem><para/debug mode setting/</listitem></varlistentry>
  <varlistentry><term/8/<listitem><para/debug color handling/</listitem></varlistentry>
  <varlistentry><term/16/<listitem><para/debug drawing/</listitem></varlistentry>
  <varlistentry><term/32/<listitem><para/misc debugging output/</listitem></varlistentry>
  <varlistentry><term/64/<listitem><para/debug dynamic library handling/</listitem></varlistentry>
  <varlistentry><term/128/<listitem><para/debug event handling/</listitem></varlistentry>
  </variablelist>
</para>

<para>
The debugging output can be quite verbose and in most cases you should
redirect stderr so that it does not interfere with your program's
output.
</para>

</listitem>
</varlistentry>
  

<varlistentry>
<term><envar>GGI_DEBUGSYNC</envar></term>
<listitem><para>
Turn on synchronous debugging output, flushing the output buffers before
returning from <function/GGIDPRINT/ calls.
</para></listitem>
</varlistentry>

  
<varlistentry>
<term><envar>FRAMEBUFFER</envar></term>
<listitem><para>
Specifies which framebuffer device file the <systemitem/fbdev/ target
should use.
</para></listitem>
</varlistentry>

  
<varlistentry>
<term><envar>GGI_NEWVT</envar></term>
<listitem><para>
If set, causes a new virtual console to be allocated for some
Linux-console-based targets (currently <systemitem/fbdev/ and
<systemitem/glide/).
</para></listitem>
</varlistentry>
  

<varlistentry id="GGI-MANSYNC-FPS">
<term><envar>GGI_MANSYNC_FPS</envar></term>
<listitem><para>
This variable specifies the framerate for targets <link
linkend="mansync"/emulating synchronous mode/. The default is 20fps.  If
you are experiencing problems with the X target over relatively slow
remote connections it might be due to connection overload. You might
want to try with a lower <envar/GGI_MANSYNC_FPS/ setting.
</para></listitem>
</varlistentry>

</variablelist>
</para>
</chapter>


