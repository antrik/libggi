
<para>
Include the header <filename>ggi/ggi.h</filename> in the C program, and
link with <option/-lggi/.
</para>

<para>
LibGGI functions are prefixed with <literal/ggi/, and most other
#defines are prefixed with <literal/GGI_/.
</para>

<para>
Most LibGGI functions return <returnvalue/0/ to indicate success, and a
negative error code to indicate errors.  Return codes greater than
<returnvalue/0/ are usually additional hints or other non-negative
integer data.  A list of error codes and descriptions can be found in
the <filename>ggi/errors.h</filename> file, which is part of the
LibGGI/LibGG package.
</para>

<sect2 id="libggi-threadsafety">
<title/Thread-safety in LibGGI/

<para>
LibGGI currently only guarantees inter-<link linkend="visual"/visual/
threadsafety, meaning that you can have multiple threads opening and
using one visual each, but you can't have several threads using the same
visual.  If the application is drawing directly to a <link
linkend="directbuffer"/DirectBuffer/, however, it can have any number
of threads banging on it.  If an application needs to access one visual
from different threads, then it must do the locking itself.  The library
does not do this locking to avoid bloat for something most applications
do not require.
</para>

</sect2>




