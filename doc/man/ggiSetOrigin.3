.\"Generated by ggi version of db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GGISETORIGIN" 3 "" "" ""
.SH NAME
ggiSetOrigin, ggiGetOrigin \- Set and get origin of virtual screen
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ggi/ggi.h>
.sp
.HP 18
int\ \fBggiSetOrigin\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIx\fR, int\ \fIy\fR);
.HP 18
int\ \fBggiGetOrigin\fR\ (ggi_visual_t\ \fIvis\fR, int\ *\fIx\fR, int\ *\fIy\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
 \fBggiSetOrigin\fR sets the top-left corner of the displayed area to (\fIx\fR, \fIy\fR).

.PP
When using a larger virtual area, you can pan the visible area over the virtual one to do scrolling. Some targets have extemely efficient means to do this (i.e. they do it in hardware).

.PP
Large virtual areas are also commonly used for buffering the display contents, but that is usually more easily accomplished by requesting a specific number of frames when setting a mode.

.PP
This call takes dot coordinates, not pixel coordinates as all other drawing primitives do. There is no difference in graphics modes because by definition dpp is 1x1, but in text modes the application can do smooth scrolling.

.PP
 \fBggiGetOrigin\fR gets the current top-left corner of the displayed area into (\fIx\fR, \fIy\fR).

.PP
Due to rounding to the hardware's capabilities, the values retrieved by a subsequent \fBggiGetOrigin\fR may not necessarily match those passed to \fBggiSetOrigin\fR previously.

.SH "RETURN VALUE"

.PP
0 for OK, otherwise an error code.

.SH "EXAMPLES"
Example 13. Pan from the top to the bottom of the virtual screen
.nf

for(i = 0; i < virt_y-visible_y; i++) {
        ggiSetOrigin(vis, 0, i);
}

.fi

