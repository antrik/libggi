.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "DISPLAY-SUB" 7ggi "" "" ""
.SH NAME
display-sub \- Make a child visual that is a window to the parent
.SH "DESCRIPTION"

.PP
Creates a `child' visual within a "parent". This can be thought of as a window and the sub target is intended for simple windowing systems.

.PP
No textual arguments. \fIargptr\fR must contain the parent visual.

.PP
The sub target behaves a bit special with respect to (i.e. abuses the semantics of :) the \fBggiSetMode\fR call. It uses the "visible" size for the top left corner position of the window within the visual, and the "virtual" size for window width and height. Note, that moving/resizing the window does not cause any drawing action. You have to perform those yourself. All it does for you is providing a virtual visual within an existing one, which is convenient to allow for window system canvases to be about any GGI program.

.SH "FEATURES"
DirectBuffer not supported.Accelerated to the point of the parent. Calls are mapped
through with modified clipping and coordinates.
