.\"Generated by ggi version of db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GGIOPEN" 3 "" "" ""
.SH NAME
ggiOpen, ggiClose \- Open and close a visual
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ggi/ggi.h>
.sp
.HP 22
ggi_visual_t\ \fBggiOpen\fR\ (const\ char\ *\fIdisplay\fR, \fI...\fR);
.HP 14
int\ \fBggiClose\fR\ (ggi_visual_t\ \fIvis\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
 \fBggiOpen\fR opens a visual. The visual is specified as a display string, followed by NULL. If only NULL is specified, the default display target is opened. (This may be may be specified by the user.)

.PP
The other arguments are for internal purposes only, such as \fIargptr\fR, used to pass driver-specific, non-textual information to the driver.

.PP
 \fBggiClose\fR releases and destroys an open visual. This will close X windows, return consoles to text-mode, etc.

.SH "RETURN VALUE"

.PP
 \fBggiOpen\fR returns the opened visual (\fBggi_visual_t\fR), or NULL for error.

.PP
 \fBggiClose\fR returns 0 for OK, otherwise an error code.

.SH "EXAMPLES"
Example 10. Open and closing default visual
.nf

ggi_visual_t vis = ggiOpen(NULL);

if(vis==NULL)
{
        ggiPanic("Couldn't open default visual!\\n");
}

\fI/* do stuff */\fR

ggiClose(vis);


.fi
Example 11. Open and closing a memory visual
.nf

ggi_visual_t memvis = ggiOpen("display-memory", NULL);

if(memvis==NULL) {
        return -1;
}

\fI/* do stuff */\fR

ggiClose(memvis);

.fi

.SH "SEE ALSO"
\fBggiInit\fR(3)
