.TH "ggiOpen" 3 GGI
.SH NAME
ggiOpen, ggiClose \- Open and close a visual
.SH SYNOPSIS
\fB#include <ggi/ggi.h>\fR

ggi_visual_t \fBggiOpen\fR( const char *\fIdisplay\fR, \fI...\fR );

int \fBggiClose\fR( ggi_visual_t \fIvis\fR );
.SH DESCRIPTION
\fBggiOpen\fR opens a visual. The visual is specified as a display string, followed by \fBNULL\fR. If only \fBNULL\fR is specified, the default display target is opened. The other arguments are for internal purposes only, such as \fIargptr\fR, used to pass driver-specific, non-textual information to the driver.

\fBggiClose\fR releases and destroys an open visual. This will close X windows, return consoles to text-mode, etc.
.SH RETURN VALUE
\fBggiOpen\fR returns the opened visual or \fBNULL\fR for error. The ggi_visual_t is opaque to the programmer and should only be used through GGI functions.

\fBggiClose\fR returns \fB0\fR for OK, otherwise an error code.
.SH EXAMPLES
.SS Open and closing default visual
.nf

ggi_visual_t vis = ggiOpen(NULL);

if(vis==NULL) {
        ggiPanic("Couldn't open default visual!\\n");
}

/* do stuff */

ggiClose(vis);


.fi
.SS Open and closing a memory visual
.nf

ggi_visual_t memvis = ggiOpen("display-memory", NULL);

if(memvis==NULL) {
        return -1;
}

/* do stuff */

ggiClose(memvis);

.fi
.SH SEE ALSO
\fBggiInit\fR (3) 
