.TH "ggiOpen" 3 "2005-05-27" "libggi-current" GGI
.SH NAME
\fBggiOpen\fR, \fBggiClose\fR : Open and close a visual
.SH SYNOPSIS
.nb
.nf
#include <ggi/ggi.h>

ggi_visual_t ggiOpen(const char *display, ...);

int ggiClose(ggi_visual_t vis);
.fi

.SH DESCRIPTION
\fBggiOpen\fR opens a visual.  The visual is specified as a display
string, followed by \fBNULL\fR.  If only \fBNULL\fR is specified, the default
display target is opened, which means first examining \fBGGI_DISPLAY\fR,
then invoking \f(CWdisplay-auto(7)\fR.  The other arguments are for internal
purposes only, such as \fIargptr\fR, used to pass driver-specific,
non-textual information to the driver.

\fBggiClose\fR releases and destroys an open visual.  This will close X
windows, return consoles to text-mode, etc.
.SH RETURN VALUE
\fBggiOpen\fR returns the opened visual or \fBNULL\fR for error.  The
\fBggi_visual_t\fR is opaque to the programmer and should only be used
through GGI functions.

\fBggiClose\fR returns \fB0\fR for OK, otherwise a \f(CWggi-error(3)\fR code.
.SH EXAMPLES
Open and closing default visual:

.nb
.nf
ggi_visual_t vis = ggiOpen(NULL);

if(vis==NULL) {
      ggiPanic("Couldn't open default visual!\en");
}

/* do stuff */

ggiClose(vis);
.fi

Open and closing a memory visual:

.nb
.nf
ggi_visual_t memvis = ggiOpen("display-memory", NULL);

if(memvis==NULL) {
      return -1;
}

/* do stuff */

ggiClose(memvis);
.fi

.SH SEE ALSO
\f(CWdisplay-auto(7)\fR, \f(CWggiInit(3)\fR, \f(CWlibggi(7)\fR
