.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GGIPARSEMODE" 3ggi "" "" ""
.SH NAME
ggiParseMode, ggiPrintMode, ggiSPrintMode, ggiFPrintMode \- Parse and print formatted strings specifying LibGGI modes
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ggi/ggi.h>
.sp
.HP 18
int\ \fBggiParseMode\fR\ (const\ char\ *\fIs\fR, ggi_mode\ *\fIm\fR);
.HP 18
int\ \fBggiPrintMode\fR\ (ggi_mode\ *\fIm\fR);
.HP 19
int\ \fBggiSPrintMode\fR\ (char\ *\fIs\fR, ggi_mode\ *\fIm\fR);
.HP 19
int\ \fBggiFPrintMode\fR\ (FILE\ *\fIs\fR, ggi_mode\ *\fIm\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
 \fBggiParseMode\fR parses a string into a ggi_mode.

.PP
The \fBggi*PrintMode\fR functions print all the members of ggi_mode in a human-readable form. \fBggiSPrintMode\fR outputs to a preallocated string buffer, \fBggiFPrintMode\fR outputs to a stdio \fBFILE\fR, and \fBggiPrintMode\fR outputs to standard output. These functions correspond to \fBsprintf \fR(3), \fBfprintf \fR(3), \fBprintf \fR(3), respectively.

.PP
The format of the string used by these functions is exactly the same as the one used in the \fBGGI_DEFMODE\fR environment variable.

.SH "RETURN VALUE"

.PP
 \fBggiParseMode\fR returns: 

.TP
0
on success, i.e. the string was correct. However, errors involving GT_*, position information, or mismatched brackets do not make it fail; these errors are simply ignored.

.TP
<0
if there is text that can not be parsed. This text is printed to stderr. All parameters parsed so far are written into \fIm\fR.
 

.PP
So \fIm\fR contains all parameters that have been successfully parsed. For most applications there will be no need for testing \fBggiParseMode\fR for failure.

