.\\" auto-generated by docbook2man-spec $Revision: 1.4 $
.TH "ggiInit" "3ggi" "14 August 2001" "GGI" "LibGGI API"
.SH NAME
ggiInit, ggiExit \- Initialize and uninitialize LibGGI
.SH SYNOPSIS
\fB#include <ggi/ggi.h>
.sp
int ggiInit(void);
.sp
int ggiExit(void);
\fR.SH "DESCRIPTION"
.PP
\fBggiInit\fR initalizes the library. This function must be called
before using other LibGGI functions; otherwise the results will be
undefined.
.PP
\fBggiExit\fR uninitializes the library (after being initalized by
\fBggiInit\fR) and automatically cleanup if necessary. This should
be called after an application is finished with the library. If any GGI
functions are called after the library has been uninitialized, the
results will be undefined.
.PP
\fBggiInit\fR allows multiple invocations. A reference count is
maintained, and to completely uninitialize the library,
\fBggiExit\fR must be called as many times as \fBggiInit\fR
has been called beforehand.
.SH "RETURN VALUE"
.PP
\fBggiInit\fR returns 0 for OK, otherwise an error
code.
.PP
\fBggiExit\fR returns:
.TP
\fB0\fR
after successfully cleaning up,
.TP
\fB> 0\fR
the number of 'open' \fBggiInit\fR calls, if there has been more
than one call to \fBggiInit\fR. As \fBggiInit\fR and
\fBggiExit\fR must be used in properly nested pairs, e.g. the first
\fBggiExit\fR after two \fBggiInit\fRs will return 1.
.TP
\fB< 0\fR
error, especially if more \fBggiExit\fR calls have been done than
\fBggiInit\fR calls.
.SH "EXAMPLES"
.SS "INITIALIZE AND UNINITIALIZE LIBGGI"
.sp
.nf
if (ggiInit() < 0)
{
	fprintf(stderr, "Cannot initalize LibGGI!\\n");
	exit(1);
}

\fI/* Do some LibGGI stuff */\fR

ggiExit();
.sp
.fi
