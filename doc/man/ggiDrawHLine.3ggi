.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GGIDRAWHLINE" 3ggi "" "" ""
.SH NAME
ggiDrawHLine, ggiPutHLine, ggiGetHLine \- Draw, put, and get a horizontal line from a visual
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ggi/ggi.h>
.sp
.HP 18
int\ \fBggiDrawHLine\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIx\fR, int\ \fIy\fR, int\ \fIw\fR);
.HP 17
int\ \fBggiPutHLine\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIx\fR, int\ \fIy\fR, int\ \fIw\fR, void\ *\fIbuf\fR);
.HP 17
int\ \fBggiGetHLine\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIx\fR, int\ \fIy\fR, int\ \fIw\fR, void\ *\fIbuf\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
Draw, put, or get a horizontal line from (\fIx\fR,\fIy\fR), extending \fIw\fR pixels in the positive x direction (normally right). The height is one pixel.

.PP
The *\fIbuf\fR parameter in Get/Put functions points to a buffer from which the pixels will be read, or to which they will be written (it must be correctly allocated), depending on the case. See \fBggiPackColors\fR and \fBggiUnmapPixels\fR functions for more on how to deal with pixels.

.SH "RETURN VALUE"

.PP
All three functions return 0 to indicate success.

.SH "SEE ALSO"
, , , , 
