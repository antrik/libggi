.\" This manpage has been automatically generated by docbook2man-spec
.\" from a DocBook document.  docbook2man-spec can be found at:
.\" <http://shell.ipoline.com/~elmert/hacks/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "ggiSetGraphMode" "3ggi" "12 August 1999" "GGI" "LibGGI API Manual"
.SH NAME
ggiSetTextMode, ggiCheckTextMode, ggiSetGraphMode, ggiCheckGraphMode, ggiSetSimpleMode, ggiCheckSimpleMode \- Set and check a text/graphics mode on a visual
.SH SYNOPSIS
\fB#include <ggi/ggi.h>
.sp
int ggiSetTextMode(ggi_visual_t \fIvisual\fB, 
int \fIcols\fB, int \fIrows\fB, 
int \fIvcols\fB, int \fIvrows\fB, 
int \fIfontx\fB, int \fIfonty\fB);
.sp
int ggiCheckTextMode(ggi_visual_t \fIvisual\fB, 
int \fIcols\fB, int \fIrows\fB, 
int \fIvcols\fB, int \fIvrows\fB, 
int \fIfontx\fB, int \fIfonty\fB, 
ggi_mode *\fIsuggested_mode\fB, \fI...\fB);
.sp
int ggiSetGraphMode(ggi_visual_t \fIvisual\fB, 
int \fIx\fB, int \fIy\fB, 
int \fIxv\fB, int \fIyv\fB, 
ggi_graphtype \fItype\fB);
.sp
int ggiCheckGraphMode(ggi_visual_t \fIvisual\fB, 
int \fIx\fB, int \fIy\fB, 
int \fIxv\fB, int \fIyv\fB, 
ggi_graphtype \fItype\fB, 
ggi_mode *\fIsuggested_mode\fB, \fI...\fB);
.sp
int ggiSetSimpleMode(ggi_visual_t \fIvisual\fB,
int \fIx\fB, int \fIy\fB, 
int \fIframes\fB, 
ggi_graphtype \fItype\fB);
.sp
int ggiCheckSimpleMode(ggi_visual_t \fIvisual\fB, 
int \fIx\fB, int \fIy\fB, 
int \fIframes\fB, 
ggi_graphtype \fItype\fB, 
ggi_mode *\fIsuggested_mode\fB);
\fR.SH "DESCRIPTION"
.PP
The \fBggiCheck{Text,Graph,Simple}Mode\fR and
\fBggiSet{Text,Graph,Simple}Mode\fR are convenient versions of
\fBggiSetMode\fR. They accept the mode parameters as integer arguments
rather than as a ggi_mode struct that the application has to
fill out. Otherwise, they are functionally equivalent to the 'master'
\fBggiCheckMode\fR and \fBggiSetMode\fR functions, and the same
mode-setting semantics apply.
.PP
\fBggiSetTextMode\fR sets a textmode with given columns and rows,
virtual columns and rows and a font of the given size.
.PP
\fBggiCheckTextMode\fR checks a textmode with given columns and rows,
virtual columns and rows and a font of the given size.
.PP
\fBggiSetGraphMode\fR sets a graphics mode with a visible area of size
\fIx\fR,\fIy\fR and a virtual area of size \fIxv\fR\fIyv\fR
and the specified graphics type. (You can pan around the virtual area using
\fBggiSetOrigin\fR.)
.PP
\fBggiCheckGraphMode\fR checks a graphics mode with the specified mode
features.
.PP
\fBggiSetSimpleMode\fR sets a graphics mode with a visible area of size
\fIx\fR\fIy\fR and \fIframes\fR number of frames and the specified
graphics type.
.PP
\fBggiCheckSimpleMode\fR checks a graphics mode with the specified
mode features.
.PP
If \fIsuggested_mode\fR is not \fBNULL\fR, then it will be filled
with the suggested mode, as documented under \fBggiCheckMode\fR.
.PP
In text modes, the font size is the size of the pixel
(\fBggi_mode.dpp\fR).
.SH "RETURN VALUE"
.PP
For \fBggiCheckTextMode\fR and \fBggiCheckGraphMode\fR, a return
of 0 means that a \fBggiSet*Mode\fR call for this mode
would succeed. Otherwise, the mode given cannot be set. In this case,
\fIsuggested_mode\fR is changed to the suggested mode.
.PP
For \fBggiSetTextMode\fR and \fBggiSetGraphMode\fR, a return of
0 indicates success, while any other value indicates an error.
.SH "EXAMPLES"
.SS "TRY A 320X200X8 MODE"
.sp
.nf
err = ggiCheckGraphMode(vis, 320, 200, GGI_AUTO, GGI_AUTO, GT_8BIT, 
			&sug_mode, NULL);
if(err) {
        \fI/* Check if returned mode is ok... /*\fR
}
else {
        ggiSetMode(&sug_mode);
}
.sp
.fi
.SH "SEE ALSO"
\fBggiOpen\fR(3), \fBggiSetMode\fR(3)
