.\" This manpage has been automatically generated by docbook2man-spec
.\" from a DocBook document.  docbook2man-spec can be found at:
.\" <http://shell.ipoline.com/~elmert/hacks/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "ggiEventPoll" "3ggi" "12 August 1999" "GGI" "LibGGI API Manual"
.SH NAME
ggiJoinInputs, ggiEventPoll, ggiEventsQueued, ggiEventRead, ggiEventSend, ggiSetEventMask, ggiGetEventMask, ggiAddEventMask, ggiRemoveEventMask \- Event management for LibGGI visual
.SH SYNOPSIS
\fB#include <ggi/ggi.h>
.sp
gii_input_t ggiJoinInputs(ggi_visual_t \fIvis\fB, gii_input_t \fIinp\fB);
.sp
gii_event_mask ggiEventPoll(ggi_visual_t \fIvis\fB, gii_event_mask \fImask\fB, struct timeval *\fIt\fB);
.sp
int ggiEventsQueued(ggi_visual_t \fIvis\fB, gii_event_mask \fImask\fB);
.sp
int ggiEventRead(ggi_visual_t \fIvis\fB, gii_event *\fIev\fB, gii_event_mask \fImask\fB);
.sp
int ggiEventSend(ggi_visual_t \fIvis\fB, gii_event *\fIev\fB);
.sp
int ggiSetEventMask(ggi_visual_t \fIvis\fB, gii_event_mask \fIevm\fB);
.sp
gii_event_mask ggiGetEventMask(ggi_visual_t \fIvis\fB);
.sp
int giiAddEventMask(ggi_visual_t \fIvis\fB, gii_event_mask \fImask\fB);
.sp
int giiRemoveEventMask(ggi_visual_t \fIvis\fB, gii_event_mask \fImask\fB);
\fR.SH "DESCRIPTION"
.PP
LibGGI provides input facilities through an auxiliary library,
\fBLibGII\fR.
Each LibGGI visual internally contains a \fBgii_input_t\fR input, and
all LibGII functions are available to manipulate and process inputs.
The LibGGI version of LibGII functions simply take a \fBggi_visual_t\fR
rather than \fBgii_input_t\fR. Events are LibGII types. All other
semantics are the same; see the \fILibGII API Manual\fR for details.
.PP
LibGGI visuals open the appropriate inputs already, including mouse
and keyboard, or the inputs are 'intrinsic' to the visual, e.g. X mouse
and keyboard events. Thus in the usual cases there is no need to open a
LibGII \fBgii_input_t\fR directly (and that may in fact fail because an
input device is already open). The LibGGI \fBggiEvent*\fR
functions \fBshould\fR be used to do event handling in LibGGI.
.SH "SEE ALSO"
\fBgiiJoinInputs\fR(3), \fBgiiEventPoll\fR(3), \fBgiiEventsQueued\fR(3), \fBgiiEventRead\fR(3), \fBgiiEventSend\fR(3<), \fBgiiSetEventMask\fR(3), \fBgiiGetEventMask\fR(3), \fBgiiAddEventMask\fR(3), \fBgiiRemoveEventMask\fR(3)
