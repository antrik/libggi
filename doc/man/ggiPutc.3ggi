.\\" auto-generated by docbook2man-spec $Revision: 1.4 $
.TH "ggiPutc" "3ggi" "14 August 2001" "GGI" "LibGGI API"
.SH NAME
ggiPutc, ggiPuts \- Draw one or more characters on visual
.SH SYNOPSIS
\fB#include <ggi/ggi.h>
.sp
int ggiPutc(ggi_visual_t \fIvis\fB, 
int \fIx\fB, int \fIy\fB, 
char \fIc\fB);
.sp
int ggiPuts(ggi_visual_t \fIvis\fB, 
int \fIx\fB, int \fIy\fB, 
const char *\fIstr\fB);
.sp
int ggiGetCharSize(ggi_visual_t \fIvis\fB, 
int *\fIwidth\fB,
int *\fIheight\fB);
\fR.SH "DESCRIPTION"
.PP
LibGGI provides a few functions to do basic character output. They are
for debugging and simple GUI applications. They are simple on purpose:
there is only one fixed-width font and its size cannot be changed. Only
the standard ASCII character set (0x20 to 0x7f) is supported, with no
internationalization features. All more complex character functions go
beyond the scope of this base library.
.PP
\fBggiPutc\fR puts a single character on a graphical visual.
.PP
\fBggiPuts\fR puts multiple characters (from a C-style null-
-terminated string) at once. No special handling is applied to control
characters like CR or LF. The associated glyph for control characters will
be displayed. ggiPuts also only clips text at the clipping rectangle and
does not wrap text.
.PP
\fBggiGetCharSize\fR obtains the size of the character cell, in pixels.
This function allows the application to corectly position the text output.
.sp
.RS
.B "Note:"
The values returned by \fBggiGetCharSize\fR is not the same as the
values of \fBdpp\fR of the
current mode, which is in dots. In graphics modes
are 1x1 dpp by definition and use at least 8x8-pixel fonts. In text
mode, the character cell is 1x1 pixels by
definition and the \fBdpp\fR value is the actual size of the font.
.RE
.sp
.SH "RETURN VALUE"
.PP
0 for success.
