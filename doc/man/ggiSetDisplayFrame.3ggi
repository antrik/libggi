.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GGISETDISPLAYFRAME" 3ggi "" "" ""
.SH NAME
ggiSetDisplayFrame, ggiSetWriteFrame, ggiSetReadFrame, ggiGetDisplayFrame, ggiGetWriteFrame, ggiGetReadFrame \- Set or get the current frame for display, writing and reading
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ggi/ggi.h>
.sp
.HP 24
int\ \fBggiSetDisplayFrame\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIframeno\fR);
.HP 22
int\ \fBggiSetWriteFrame\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIframeno\fR);
.HP 21
int\ \fBggiSetReadFrame\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIframeno\fR);
.HP 24
int\ \fBggiGetDisplayFrame\fR\ (ggi_visual_t\ \fIvis\fR);
.HP 22
int\ \fBggiGetWriteFrame\fR\ (ggi_visual_t\ \fIvis\fR);
.HP 21
int\ \fBggiGetReadFrame\fR\ (ggi_visual_t\ \fIvis\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
These functions are used for selecting or getting the current buffers, when using the multiple buffering function of LibGGI.

.PP
 \fBggiSetDisplayFrame\fR sets the frame that getsdisplayed.

.PP
 \fBggiSetWriteFrame\fR sets the frame for write operations such as \fBggiPuts\fR and \fBggiHLine\fR.

.PP
 \fBggiSetReadFrame\fR sets the frame for read operations, like \fBggiGetPixel\fR and the \fBggiCrossBlit\fR source.

.PP
 \fBggiGetDisplayFrame\fR reports the frame currently displayed.

.PP
 \fBggiGetWriteFrame\fR reports the frame currently written to.

.PP
 \fBggiSetReadFrame\fR reports the frame currently read from.

.PP
Frames are numbered from 0 to the number of frames requested - 1.

.SH "RETURN VALUE"

.PP
The \fBggiSet*Frame\fR functions return 0 if they succeed, and <0 if they fail.

.PP
The \fBggiGet*Frame\fR functions never fail.

.SH "WORKING WITH FRAMES"

.PP
Write something useful here.

