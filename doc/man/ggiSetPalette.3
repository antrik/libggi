.\"Generated by ggi version of db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GGISETPALETTE" 3 "" "" ""
.SH NAME
ggiSetPalette, ggiGetPalette \- Manipulate the palette of a visual
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ggi/ggi.h>
.sp
.HP 19
int\ \fBggiGetPalette\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIs\fR, int\ \fIlen\fR, ggi_color\ *\fIcmap\fR);
.HP 19
int\ \fBggiSetPalette\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIs\fR, int\ \fIlen\fR, ggi_color\ *\fIcmap\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
LibGGI visuals in GT_PALETTE mode maps all pixelvalues to the corresponding ggi_color entry in the visual's palette.

.PP
 \fBggiSetPalette\fR sets a range of palette values, of length \fIlen\fR, starting at index number \fIs\fR. The index can be GGI_PALETTE_DONTCARE to indicate to indicate that the palette can be installed anywhere in the CLUT. This allows optimised use in windowing environments (to minimize color flashing between windows) and should be used if possible.

.PP
 \fBggiGetPalette\fR copies the specified colors (starting from \fIs\fR, for \fIlen\fR colors) from the visual's palette to the array pointed by \fIcmap\fR.

.SH "RETURN VALUE"

.PP
\fBggiSetPalette\fR returns the number of the first entry changed. Negative values indicate error (codes).

.PP
\fBggiGetPalette\fR returns 0 for OK, otherwise an error code. When called with len=0 this function will not automatically succeed, but the return code will indicate whether there is a readable CLUT.

.SH "PALETTE IN GGI"

.PP
Write something useful here.

.SH "SEE ALSO"
\fBggiSetColorfulPalette\fR(3)
