.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "DISPLAY-X" 7ggi "" "" ""
.SH NAME
display-x \- Displays to an X11 server
.SH "SYNOPSIS"

.nf
\fBdisplay-x\fR : [\fB\fB-screen=screenidx\fR\fR | \fB\fB-inwin=winid|root\fR\fR | \fB\fB-noinput\fR\fR | \fB\fB-nocursor\fR\fR | \fB\fB-physz==sizex,sizeydpi\fR\fR | \fB\fB-nobuffer\fR\fR | \fB\fB-noaccel\fR\fR | \fB\fB-nomansync\fR\fR | \fB\fB-noshm\fR\fR | \fB\fB-nodga\fR\fR | \fB\fB-novidmode\fR\fR | \fB\fB-nodbe\fR\fR | \fB\fB-noevi\fR\fR] [\fIdisplay\fR]
         
.fi

.SH "DESCRIPTION"

.PP
 display-x displays a GGI application via an X11 server. The server may be local or remote, and options are provided to tune performance to various scenerios. In normal operation, a new X11 window is opened, solid fill primitives and copybox are accelerated by the server, and a backbuffer is kept client-side for content fills (e.g. ggiPut* functions) and to restore data when an application has been exposed after being concealed by another window.

.PP
 Ctrl-Alt-m toggles mouse grabbing in the new window. It will try to emulate a "relative" mouse device, i.e. one that can be moved arbitrarily far in any direction without ever leaving the window. This is useful for game controls, where loosing focus is generally undesireable. Note that grabbing must be turned off in order to leave the window.

.SH "OPTIONS"

.TP
\fIdisplay\fR
The X display to connect to, otherwise defaults to the display specified in \fBDISPLAY\fR

.TP
\fB-screen=screenidx\fR
The screen to run on. Normally the biggest/deepest screen compatible with the requested mode will be chosen; with this option only the screen specified by \fIscreenidx\fR will be considered.

.TP
\fB-inwin=winid|root\fR
Run in already-existing window with id \fIwinid\fR. This can be used to embed a LibGGI application into an X11 application. The value should be an X11 window ID expressed as a "0x" prefixed hexadecimal number. The special string "root" will cause the application to run in the root window of the selected screen (or the default screen if no explicit selection has been made.) Note that in the root window, you may need to explictly select a LibGII input source using the GGI_INPUT environment variable as the window manager will absorb all events sent to the root window. Some features (currently frames and virtual areas) may not work in root windows. On the other hand, when using the root window other features like direct framebuffer access and video hardware mode selection may be available which are not available when the application is running in a normal window.

.TP
\fB-noinput\fR
X events sent to the window are not captured and merged with any other LibGII input sources. This allows one to take input from raw devices without receiving duplicate events should X also be configured to use the device.

.TP
\fB-nocursor\fR
Normal behavior of display-x is to create a small dot mouse cursor pixmap which is visible when the mouse is positioned over the window containing the visual. This goes away when using mouse grabbing as described above, but otherwise can get in the way of mouse cursors implemented by the application. With this option, the X mouse cursor will be invisible when it is over the visual.

.TP
\fB-physz==sizex,sizeydpi\fR
This option will override the physical screen size reported by the X server, which affects applications which wish to remain resolution independent. \fIsizex\fR,\fIsizey\fR are the x,y size of the entire screen (not just the X window containing the visual) in millimeters, unless the optional \fIdpi\fR string is affixed, in which case, they represent resolution in dots-per-inch. Yes, there are two equals signs there, for reasons of compatibility with other targets.

.TP
\fB-nobuffer\fR
No client-side backbuffer is kept. This may result in lost data when the LibGGI application is obscured by other windows. This data loss can be minimized by enabling backing store in the X11 server. Using this option will cause operations which must read back framebuffer data to be much slower, but on the other hand can result in a slight speed gain for certain graphics primitives. It is best used when resources are severely limited on the client side, and with applications that do not perform frequent ggiPut* operations.

.TP
\fB-noaccel\fR
All rendering is performed in the client-side backbuffer, and then sent to to the server; no server-side accelerated graphics operations are used. This will signifigantly slow down certain graphics applications, but for applications that use directbuffer and asyncronous mode extensively the effect will not be noticeable. The only real reason to use this option, however, is to eliminate artifacts caused by incorrectly implemented X11 hardware drivers.

.TP
\fB-nomansync\fR
Use of the mansync helper library to periodically flush backbuffer contents to the X11 server is disabled. This, of course, will result in incorrect behavior of applications that use syncronous mode.

.TP
\fB-noshm\fR
Use of the MIT-SHM extension to speed data transfer between clients and servers which are running on the same machine is disabled. Normally it is not necessary to use this option, as use of the MIT-SHM extension is disabled automatically if it appears to be nonfunctional.

.TP
\fB-nodga\fR
Use of the XFree86-DGA extension to provide direct framebuffer access is disabled. Some implementations of the XFree86-DGA extension may cause system lockups. Use this option to prevent such occurrances. (NOTE: Currently XFree86-DGA support has not been integrated into the display-X target. To use DGA, see the older display-dga target.)

.TP
\fB-novidmode\fR
Use of the X11 Vidmode extension to change video timing in full-screen modes is disabled. Some implementations of the Vidmode extension may cause system lockups. Use this option to prevent such occurrances. (NOTE: Currently Vidmode support has not been completed)

.TP
\fB-nodbe\fR
Use of the X11 DBE extension to provide buffered frame support is disabled. (NOTE: Currently DBE extension support has not been completed.)

.TP
\fB-noevi\fR
Use of the X11 Extended Visual Information extension to identify visuals which are exclusively used for overlay/underlay is disabled.

.SH "FEATURES"

.SS "For display-x"
DirectBuffer always available.AcceleratedMultiple frames except for root windowPanning except for root window
