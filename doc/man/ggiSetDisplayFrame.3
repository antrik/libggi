.TH "ggiSetDisplayFrame" 3 "2003-04-02" "libggi-current" GGI
.SH NAME
\fBggiSetDisplayFrame\fR, \fBggiSetWriteFrame\fR, \fBggiSetReadFrame\fR, \fBggiGetDisplayFrame\fR, \fBggiGetWriteFrame\fR, \fBggiGetReadFrame\fR : Set or get the current frame for display, writing and reading
.SH SYNOPSIS
.nb
.nf
#include <ggi/ggi.h>

int ggiSetDisplayFrame(ggi_visual_t vis, int frameno);

int ggiSetWriteFrame(ggi_visual_t vis, int frameno);

int ggiSetReadFrame(ggi_visual_t vis, int frameno);

int ggiGetDisplayFrame(ggi_visual_t vis);

int ggiGetWriteFrame(ggi_visual_t vis);

int ggiGetReadFrame(ggi_visual_t vis);
.fi

.SH DESCRIPTION
These functions are used for selecting or getting the current buffers,
when using the multiple buffering function of LibGGI.

\fBggiSetDisplayFrame\fR sets the frame that gets displayed.

\fBggiSetWriteFrame\fR sets the frame for write operations such as
\fBggiPuts\fR and \fBggiHLine\fR.

\fBggiSetReadFrame\fR sets the frame for read operations, like
\fBggiGetPixel\fR and the \fBggiCrossBlit\fR source.

\fBggiGetDisplayFrame\fR reports the frame currently displayed.

\fBggiGetWriteFrame\fR reports the frame currently written to.

\fBggiSetReadFrame\fR reports the frame currently read from.

Frames are numbered from 0 to the number of frames requested minus 1.
.SH RETURN VALUE
The \fBggiSet*Frame\fR functions return \fB0\fR if they succeed, and \fB<0\fR if
they fail.

The \fBggiGet*Frame\fR functions never fail.
.SH WORKING WITH FRAMES
Write something useful here.
.SH SEE ALSO
\fBggi_mode(3)\fR
