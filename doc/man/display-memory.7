.\"Generated by ggi version of db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "DISPLAY-MEMORY" 7 "" "" ""
.SH NAME
display-memory \- Display on buffer in main memory
.SH "SYNOPSIS"

.nf
\fBdisplay-memory\fR : [\fB-input\fR] [\fB-noblank\fR] [\fB-physz=sizex,sizeydpi\fR]
               [\fB-pixfmt=format_string\fR] [\fB-layout=fstride[plblstride|planpstride,plstride]\fR]
               [\fBshmid:\fIsid\fR\fR | \fBkeyfile:\fIsize\fR:\fIid\fR:\fIfname\fR\fR
               | \fBpointer\fR]
.fi

.SH "DESCRIPTION"

.PP
Emulates a linear framebuffer in main memory. The framebuffer can be a shared memory segment, an area specified by the application, or an area allocated by display-memory itself.

.SH "OPTIONS"

.TP
\fI-input\fR
If the \fB-input\fR option is set, an input buffer of INPBUFSIZE (default is 8192 bytes) as #define'd in \fIggi/display/memory.h\fR is allocated at the start of the requested memory area.

When running on shared memory, this option enables you to to give input (using \fBgiiSendEvent\fR) to other processes sharing that segment. This technique is demonstrated in cube3d and can be used for things like GGI multiplexers.

.TP
\fI-noblank\fR
If the \fB-noblank\fR option is set, the framebuffer will not be filled with solid black when the mode of the visual is set. This is useful for preserving data from other sources when using a preallocated area of memory as a framebuffer.

.TP
\fB-physz=sizex,sizeydpi\fR
This option will provide a physical screen size for applications which wish to remain resolution independent. \fIsizex\fR,\fIsizey\fR are the x,y size of the screen in millimeters, unless the optional \fIdpi\fR string is affixed, in which case, they represent resolution in dots-per-inch.

.TP
\fB-pixfmt=format_string\fR
This option will provide a non-default pixel format explicitly. Currently the accepted format of \fIformat_string\fR is something like "r5b5g5p1", which would specify a pixel where the low bit of the pixel is unused padding, followed by 5 bits of green, then 5 bits of blue and finally 5 bits of red, with the remaining high bits, if any, being unused pad. A more formal description of this format string will be provided (and more strings accepted) in future LibGGI releases.

.TP
\fB-layout=fstride[plblstride|planpstride,plstride]\fR
This option will provide a non-default framebuffer layout explicitly. The \fIfstride\fR parameter denotes the number of bytes between frames in the framebuffer, and will default to the size of the virtual screen in bytes if nonpresent or set to 0. Following fstride, the string "plb" denotes a linear packed-pixel framebuffer, or the string "plan" instead denotes a planar framebuffer. The packed-pixel framebuffer layout is the default. If the string "plb" is present, a horizontal stride \fIlstride\fRmay appear, denoting the number of bytes that elapse between the beginning of one line and the next. This will default to the size of a horizontal line in bytes if nonpresent or set to zero. If the string "plan" is present, up to two numbers, comma separated, may appear after the string. The first number, \fIpstride\fRdenotes the number of bytes which elapse between the beginning of one plane and the next. This will default to the minimum integral number of bytes that may contain one bitplane of the virtual screen if nonpresent or set to zero. The second number, \fIplstride\fRdenotes the number of bytes that elapse between the beginning of one bitplane-line and the next. This will default to the minimum integral number of bytes which may contain one bitplane-line of the virtual screen if nonpresent or set to zero.

More strings and format parameters may accepted in future LibGGI releases.

.TP
shmid:\fIsid\fR
use existing shared memory ID \fIsid\fR

.TP
keyfile:\fIsize\fR:\fIid\fR:\fIfname\fR
create a new shm segment with id ftok(\fIfname\fR, \fIid\fR) of size \fIsize\fR (preferred method !)

.TP
pointer
use the memory pointed to by \fIargptr\fR (only available to applications calling \fBggiOpen\fR).

.RS
.Sh "Important"

.PP
If you specify a memory area to use - be sure it's big enough as no checks can or will be made that a certain mode fits into it.

.RE

.SH "FEATURES"
DirectBuffer support always available.Unaccelerated.
