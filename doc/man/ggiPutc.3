.\"Generated by ggi version of db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GGIPUTC" 3 "" "" ""
.SH NAME
ggiPutc, ggiPuts \- Draw one or more characters on visual
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ggi/ggi.h>
.sp
.HP 13
int\ \fBggiPutc\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIx\fR, int\ \fIy\fR, char\ \fIc\fR);
.HP 13
int\ \fBggiPuts\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIx\fR, int\ \fIy\fR, const\ char\ *\fIstr\fR);
.HP 20
int\ \fBggiGetCharSize\fR\ (ggi_visual_t\ \fIvis\fR, int\ *\fIwidth\fR, int\ *\fIheight\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
LibGGI provides a few functions to do basic character output. They are for debugging and simple GUI applications. They are simple on purpose: there is only one fixed-width font and its size cannot be changed. Only the standard ASCII character set (0x20 to 0x7f) is supported, with no internationalization features. All more complex character functions go beyond the scope of this base library.

.PP
 \fBggiPutc\fR puts a single character on a graphical visual.

.PP
 \fBggiPuts\fR puts multiple characters (from a C-style null- -terminated string) at once. No special handling is applied to control characters like CR or LF. The associated glyph for control characters will be displayed. ggiPuts also only clips text at the clipping rectangle and does not wrap text.

.PP
 \fBggiGetCharSize\fR obtains the size of the character cell, in pixels. This function allows the application to corectly position the text output.

.RS
.Sh "Note"

.PP
The values returned by \fBggiGetCharSize\fR is not the same as the values of dpp of the current mode, which is in dots. In graphics modes are 1x1 dpp by definition and use at least 8x8-pixel fonts. In text mode, the character cell is 1x1 pixels by definition and the dpp value is the actual size of the font.

.RE

.SH "RETURN VALUE"

.PP
 0 for success.

