.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GGIPANIC" 3ggi "" "" ""
.SH NAME
ggiPanic \- Exit LibGGI programs for fatal errors
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ggi/ggi.h>
.sp
.HP 15
void\ \fBggiPanic\fR\ (const\ char\ *\fIformat\fR, \fI...\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
 \fBggiPanic\fR shuts down the application, closing all visuals, with \fBprintf\fR(3) -style reporting to stderr, taking a format string and any additional variables.

.PP
 \fBggiPanic\fR should only be used by usermode programs when something is really screwed, and they do not know what to do. The same applies for libraries, but might be used in rare situations such as corruption of critical data structures.

.SH "RETURN VALUE"

.PP
Never returns.

.SH "EXAMPLES"
Example 7. An unrecoverable error
.nf

if (my_important_struct->magic != MAGIC) {
        ggiPanic("Fatal error: structure is corrupted\\n");
}

.fi

