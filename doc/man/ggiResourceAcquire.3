.\"Generated by ggi version of db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GGIRESOURCEACQUIRE" 3 "" "" ""
.SH NAME
ggiResourceAcquire, ggiResourceRelease, ggiResourceMustAcquire \- Acquire and release a LibGGI resource
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ggi/ggi.h>
.sp
.HP 24
int\ \fBggiResourceAcquire\fR\ (ggi_resource_t\ \fIres\fR, uint32\ \fIactype\fR);
.HP 24
int\ \fBggiResourceRelease\fR\ (ggi_resource_t\ \fIres\fR);
.HP 28
int\ \fBggiResourceMustAcquire\fR\ (ggi_resource_t\ \fIres\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
 \fBggiResourceAcquire\fR acquires (locks) a LibGGI resource, typically a DirectBuffer (see examples below). The \fIactype\fR indicates the desired access type for the operation. The following flags may be bitwise-or'ed together: 

.TP
GGI_ACTYPE_READ
read access to the resource

.TP
GGI_ACTYPE_WRITE
write access to the resource
 

.PP
 \fBggiResourceRelease\fR releases (unlocks) an already-acquired resource.

.PP
 \fBggiResourceMustAcquire\fR determines whether or not the specified resource needs to be acquired before using.

.SH "RETURN VALUE"

.PP
 \fBggiResourceAcquire\fR and \fBggiResourceRelease\fR return 0 on success, <0 on failure.

.PP
 \fBggiResourceMustAcquire\fR is simply a macro that returns true if the resource must be explicitly acquired and released, or false if not. However, it is still safe to call \fBggiResourceAcquire\fR or \fBggiResourceRelease\fR even in the latter case -- it --> -- would be a no-op.

.SH "EXAMPLES"
Example 15. Using DirectBuffers
.nf

const ggi_directbuffer *dbuf;

/* Acquire DirectBuffer before we use it. */
if (ggiResourceAcquire(dbuf->resource, GGI_ACTYPE_WRITE) != 0) {
	fail("Error acquiring DirectBuffer\\n");
}

\fI/* Do framebuffer rendering here... */\fR

/* Release DirectBuffer when done with it. */
ggiResourceRelease(dbuf->resource);

.fi

.SH "SEE ALSO"
\fBggi_directbuffer\fR(3)
