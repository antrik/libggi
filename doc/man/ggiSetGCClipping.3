.\"Generated by ggi version of db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GGISETGCCLIPPING" 3 "" "" ""
.SH NAME
ggiSetGCClipping, ggiGetGCClipping \- Set or get the clipping rectangle for a visual
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ggi/ggi.h>
.sp
.HP 22
int\ \fBggiSetGCClipping\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIleft\fR, int\ \fItop\fR, int\ \fIright\fR, int\ \fIbottom\fR);
.HP 22
int\ \fBggiGetGCClipping\fR\ (ggi_visual_t\ \fIvis\fR, int\ *\fIleft\fR, int\ *\fItop\fR, int\ *\fIright\fR, int\ *\fIbottom\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
 \fBggiSetGCClipping\fR sets the the current clipping rectangle to (\fIleft\fR,\fItop\fR)- (\fIright\fR-1,\fIbottom\fR-1), inclusive.

.PP
Initially the clipping rectangle is the whole virtual screen.

.PP
All LibGGI drawing primitives obey the clipping rectangle. Negative coordinates given to LibGGI drawing functions will be clipped correctly.

.PP
 \fBggiGetGCClipping\fR reads the coordinates of the current clipping rectangle.

.SH "RETURN VALUE"

.PP
Both functions 0 for OK.

