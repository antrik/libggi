.TH "display-sub" 7 "2008-04-25" "libggi-current" GGI
.SH NAME
\fBdisplay-sub\fR : Make a child visual that is a window to the parent
.SH SYNOPSIS
.nb
.nf
display-sub
.fi

.SH DESCRIPTION
Creates a "child" visual within a "parent". This can be thought of as
a window and the \fBdisplay-sub\fR target is intended for simple windowing
systems.

The sub target behaves a bit special with respect to (i.e. abuses the
semantics of :) the \f(CWggiSetMode(3)\fR call. It uses the "visible"
size for the top left corner position of the window within the visual,
and the "virtual" size for window width and height.  Note, that
moving/resizing the window does \fInot\fR cause any drawing action.  You
have to perform those yourself. All it does for you is providing a
virtual visual within an existing one, which is convenient to allow
for window system canvases to be about any GGI program.
.RS
\fBImportant:\fR
It is possible to have (\fB0\fR, \fB0\fR) as upper, left corner. But
beware, \fB0\fR means \fBGGI_AUTO\fR and therefore it may get overridden by
\fBGGI_DEFMODE\fR environment variable. So, to specify (\fB0\fR, \fB0\fR) as
upper, left corner, say (\fB-1\fR, \fB-1\fR) instead, otherwise you may get
unintended results.
.RE
.SH OPTIONS
No textual arguments, since this target can only be used by
applications. \fIargptr\fR must contain the parent visual.
.SH FEATURES
.IP \(bu 4
DirectBuffer not supported.
.IP \(bu 4
Accelerated to the point of the parent. Calls are mapped through
with modified clipping and coordinates.
.PP
