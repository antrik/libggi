.\"Generated by ggi version of db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "GGICOPYBOX" 3 "" "" ""
.SH NAME
ggiCopyBox \- Copy a rectangular area
.SH "SYNOPSIS"
.ad l
.hy 0

#include <ggi/ggi.h>
.sp
.HP 16
int\ \fBggiCopyBox\fR\ (ggi_visual_t\ \fIvis\fR, int\ \fIx\fR, int\ \fIy\fR, int\ \fIw\fR, int\ \fIh\fR, int\ \fInx\fR, int\ \fIny\fR);
.ad
.hy

.SH "DESCRIPTION"

.PP
This is a area-to-area-blit, all in the same visual. Copy the box described by \fIx\fR,\fIy\fR, \fIw\fR,\fIh\fR to the new location \fInx\fR,\fIny\fR. This automatically takes care of overlaps and optimizes for the given visual (e.g. uses HW-accel or intermediate buffers as appropriate).

.PP
 \fBggiCopyBox\fR will transfer an area between frames when the read frame is not the same as the write frame.

.SH "RETURN VALUE"

.PP
0 for OK, otherwise an error code.

.SH "SEE ALSO"
\fBggiCrossBlit\fR(3)
