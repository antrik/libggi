.TH "ggi_color" 3 GGI
.SH NAME
ggi_color, ggi_pixel \- LibGGI color description
.SH SYNOPSIS
\fB#include <ggi/ggi.h> \fR
.SH DESCRIPTION

typedef struct { uint16 r,g,b,a; }   ggi_color;
  
typedef uint32   ggi_pixel;

Colors in ggi are described genericaly through the display-independent \fBggi_color\fR structure. 16 bit channels are used to ensure sufficient precision most displays.

ggi_pixels are display-dependent pixel values. They are used by all GGI drawing primitives for efficiency. Use \fBggiMapColor\fR to convert ggi_colors to ggi_pixels.
.SH STRUCTURE MEMBERS
\fBr\fR, \fBg\fR and \fBb\fR correspond respectively to the red, green and blue channels.  Since libggi does not deal with alpha compositing, the \fBa\fR(alpha) field is mainly there for padding and it is not used by libggi. Setting this value has no effect in libggi itself, and it will most probably not be unmaped correctly from ggi_pixels. However, some extensions might make use of it, in which case you should refer to their documentation.

ggi_pixels format depends on the actual display and mode. For those who want to operate directly on pixel values, this format is describe in the \fBggi_pixelformat\fR structure.
.SH PIXEL ARRAYS
Although individual pixels are kept into 32 bits ggi_pixel, arrays of pixels, as used in \fBggi[Get¦Put]*\fR functions, \fBggiPackColors\fR and \fBggiUnpackPixels\fR, are stored in the display specific format, thus packed according to the actual pixel size.  This size is given by the \fBGT_SIZE\fR macro for graphtype or the \fBsize\fR field of the \fBggi_pixelformat\fR structure.

The buffers provided to these functions must be big enough to store or read enough pixels. Although it is safe to use 32 bits per pixel, the optimum size (in bits) can be calculated by multiplying the number of pixel by their size. Don't forget to round up to a multiple of 8 to get the number of bytes.

If you want to access such buffers directly, do not use pointer arithmetics with ggi_pixels.
.SH SEE ALSO
\fBggiMapColor\fR (3), \fBggi_mode\fR (3), \fBggi_pixelformat\fR (3)  
