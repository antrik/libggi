------------------------------------------
Status symbols
------------------------------------------
- still to do
+ still to do and to merge into the stable tree
* completed

------------------------------------------
Next major release
------------------------------------------
Version : 2.1.0
Due : ????-??-??

[Building issues]

* bring improved code in showaccel demo to showaccel2 demo
  (Bernhard Fischer, Christoph Egger)
+ Verify and fix cross-compilation to other architectures
* Check for building and installing demos, checks and utils requiring
  special headers/libs. (Peter Ekberg)
* Merge checks for libggi programs into stable tree (Christoph Egger)
+ Fix libtool to create shared libs instead of static ones
  on Linux/MIPS boxes. This misbehaviour lets compile and install, but don't
  run GGI on Linux/MIPS boxes.
  This should be fixed by libtool update. Please verify.


[Common issues]

* Alter all ggiSetPalette implementations as per mailinglist discussion
  of 1999-07-03 (http://marc.theaimsgroup.com/?l=ggi-develop&m=93097803729315&w=2).
  (Vincent Cruz)
* remove obseleted Xlib target (Christoph)
- libKGI-target (compiling framework)
+ improve modelist.inc
* allow physz params to determine mode resolution when visible == GGI_AUTO
  (Christoph Egger)
* add display-auto to separate OS dependent auto-detect routines from
  libggi core (Christoph)
* formalize pixelformat strings (e.g. "r5b5g5p1") and provide
  parser/construction functions for them in the LibGGI internal interface.
  (Christoph Egger)
- add helper target for dirty-region management


[Target specific issues]

- update targets after the common issues are done
* make fbdev use of gamma map functions
+ alter fbdev.conf appropriately for selected accel sublibs
- make pseudo-targets use of the dirty-region management

New X Target:

* implemented -fullscreen option (Christoph)
- make use of the dirty-region helper target
- Make display-xf86dga work with all pre-4.x XF86, move newer DGA support
  to a new dga helper.
+ 1,2,4-bpp support for new display-X.
+ Test/complete display-X with obscure bitdepths/endian reversal.
+ Verify/correct interaction of mouse events with setorigin.
- Re-implement old display-X emulated setorigin for root windows and
  for buggy WMs with faulty colormap handling code.
- See if colormap can be force-installed under some buggy WMs.
- colormap: add RW support.
- Turn off hidden virtual area flushing when no backing store is 
  available.
- Get upstream to fix stuff (Solid-fill ops into backing store, for 
  example.)
- Compile on crusty old libc5 machines; replace any new-style X* symbols
  with backwards-compatible old-style symbols.
- dbe helper for new display-X
- dga helper for new display-X
- vidmode helper for new display-X
- Investigate emulating lower fixed-palette bitdepths and find out how to
  get those neat 8-bpp-pseudocolor-window-on-24bpp-server visuals to work.
- Prevent ungraceful termination of a paletted/gammamapped -inroot app
  from leaving the X server in a bad state by adding a signal handler.
  Current workaround: if no apps will run after a GGI -inroot app was 
  terminated, run another GGI app -inroot and terminate it normally (use 
  GGI_INPUT=stdin to talk to an interactive app through an xterm).


[Documentation related stuff]

+ write a target developers guide




------------------------------------------
Over-Next major release
------------------------------------------
Version : 3.0.0
Due : ????-??-??

[Building issues]

[Common issues]

- change way that pixela/pixel stubs are selected, integrate ggiFlush
  and ggiSetFlags with the changed() dl cascade, add renderers (in addition
  to extensions) to the cascade, add some infrastructure for next 
  cut of LibGGIMISC to make it easy for extensions to integrate with automatic
  frame flipping.  Make sure it's all fast and efficient.
- move libmmutil from libgalloc to libggi to allow normal ggi primitives
  to use batchops
- finish long-term plan
- implement below API additions
- implement below non-backward-compatible changes
- make use of libgii's enhanced config file system:
  aliases, in-file option strings, wildcards
- make use of libgii's enhanced dl system:
  allow single library to serve multiple suggest strings


[Target specific issues]

- A working full-featured KGI-target


[Documentation related stuff]


------------------------------------------
Long-term plan
------------------------------------------

- improve fbdev mode negotiation.  Option to obey /etc/fb.modes or not.
- move display autodetection routines into a display-auto sublib, and
  create display-auto-linux, display-auto-bsd, etc, mapping them to
  display-auto in libggi.conf.

------------------------------------------
Things that will induce API additions
------------------------------------------

- make sure all bitfields (e.g. BM_TYPE) have associated _MASK/_SHIFT macros
- Figure out all the caveats for cloning a visual and add core support 
	and a ggiClone API function.
- Add a ggiFlushNeeded that checks to see if a ggiFlush should be called,
  but allows application to continue on its merry way if so.
- Add ggi{Get|Set}TargetOptions() allowing the user to not only set
  target options at ggiOpen() time.
- Add ggiGetListOfTargetExtension(char **ext);
- Add ggiQueryTargetExtension(const char *ext, char *versionstr)


------------------------------------------
Non backward-compatible changes
------------------------------------------

- Remove old ggi versions of event types, which were replaced by gii typedefs.
- Restructure ggi/errors.h codes to allow wrappers/apps to easily 
  differentiate between application errors and internal faults.
